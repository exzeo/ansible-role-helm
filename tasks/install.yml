---
- name: Install dependencies
  ansible.builtin.apt:
    name: "{{ dependencies_packages }}"
    state: present
    force: true
    update_cache: yes
  register: package_ok
  retries: 5
  delay: 2
  until: package_ok is success

- name: Check current helm version.
  ansible.builtin.command: "helm version"
  register: helm_current_version
  changed_when: helm_current_version.rc != 0
  failed_when: false

- name: Check latest helm
  ansible.builtin.uri:
    url: "https://api.github.com/repos/helm/helm/releases/latest"
    method: GET
    return_content: true
    status_code: 200
    body_format: json
  register: helm_json_response
  retries: 5
  delay: 2
  when: helm_version|length == 0
  
- name: Set Latest Version # noqa no-handler
  when: helm_version|length == 0 | default('')
  ansible.builtin.set_fact:
    helm_version: "{{ helm_json_response.json.tag_name | replace('v','') }}"

- name: Download helm archive # noqa no-handler
  ansible.builtin.get_url:
    url: "{{ helm_download_url }}"
    dest: "{{ helm_tmp_directory }}"
    mode: '0440'
  register: download_archive
  retries: 5
  delay: 2
  until: download_archive is success
  when: helm_current_version.changed and helm_version is defined

- name: Unarchive helm  # noqa no-handler
  ansible.builtin.unarchive:
    src: "{{ helm_tmp_directory }}/helm-v{{ helm_version }}-{{ ansible_system | lower }}-{{ helm_arch }}.tar.gz"
    dest: "{{ helm_tmp_directory }}"
    remote_src: true
  register: unarchive_installer
  when: download_archive.changed    

- name: Copy helm binary into place. # noqa no-handler
  ansible.builtin.copy:
    src: "{{ helm_tmp_directory }}/{{ ansible_system | lower }}-{{ helm_arch }}/helm"
    dest: "{{ helm_bin_directory }}/helm"
    mode: '0755'
    remote_src: true
  register: copy_installer
  become: true
  when: unarchive_installer.changed

- name: Cleanup Archive # noqa no-handler
  ansible.builtin.file:
    path: "{{ helm_tmp_directory }}/helm-v{{ helm_version }}-{{ ansible_system | lower }}-{{ helm_arch }}.tar.gz"
    state: absent
  when: copy_installer.changed

- name: Add helm repository.
  ansible.builtin.command: "helm repo add {{ item.name }} {{ item.url }} {{ (item.flags) if (item.flags is defined) else '' }}"
  register: add_helm_repo
  with_items: "{{ helm_repos }}"
  become: false
  changed_when: "'already exists with the same configuration' not in add_helm_repo.stdout"